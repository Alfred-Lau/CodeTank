{"version":3,"sources":["comment.js"],"names":[],"mappings":";;AAAA;;;;AAIA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,SAAS,SAAS,MAAtB;AACA,IAAI,WAAW,OAAO,KAAP,CAAa,QAA5B;;AAEA,IAAI,gBAAgB,IAAI,SAAS,MAAb,CAAoB;AACpC,aAAS,EAAC,MAAM,QAAP,EAAiB,KAAK,SAAtB,EAD2B;AAEpC,UAAM,EAAC,MAAM,QAAP,EAAiB,KAAK,MAAtB,EAF8B;AAGpC,WAAO,CAAC;AACJ,cAAM,EAAC,MAAM,QAAP,EAAiB,KAAK,MAAtB,EADF;AAEJ,YAAI,EAAC,MAAM,QAAP,EAAiB,KAAK,MAAtB,EAFA;AAGJ,iBAAS;AAHL,KAAD,CAH6B;AAQpC,aAAS,MAR2B;AASpC,UAAM;AACF,kBAAU;AACN,kBAAM,IADA;AAEN,qBAAS,KAAK,GAAL;AAFH,SADR;AAKF,kBAAU;AACN,kBAAM,IADA;AAEN,qBAAS,KAAK,GAAL;AAFH;AALR;AAT8B,CAApB,CAApB;;AAqBA;AACA,cAAc,GAAd,CAAkB,MAAlB,EAA0B,UAAS,IAAT,EAAe;AACrC,QAAI,KAAK,KAAT,EAAgB;AACZ,aAAK,IAAL,CAAU,QAAV,GAAqB,KAAK,IAAL,CAAU,QAAV,GAAqB,KAAK,GAAL,EAA1C;AACH,KAFD,MAGK;AACD,aAAK,IAAL,CAAU,QAAV,GAAqB,KAAK,GAAL,EAArB;AACH;;AAED;AACH,CATD;;AAWA,cAAc,OAAd,GAAwB;AACpB,WAAO,eAAS,EAAT,EAAa;AAChB,eAAO,KACF,IADE,CACG,EADH,EAEF,IAFE,CAEG,eAFH,EAGF,IAHE,CAGG,EAHH,CAAP;AAIH,KANmB;AAOpB,cAAU,kBAAS,EAAT,EAAa,EAAb,EAAiB;AACvB,eAAO,KACF,OADE,CACM,EAAC,KAAK,EAAN,EADN,EAEF,IAFE,CAEG,EAFH,CAAP;AAGH;AAXmB,CAAxB;;AAcA,OAAO,OAAP,GAAiB,UAAU,aAA3B","file":"comment-compiled.js","sourcesContent":["/**\n * Created by alfredlau on 2016/8/15.\n */\n\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId\n\nvar CommentSchema = new mongoose.Schema({\n    article: {type: ObjectId, ref: 'Article'},\n    from: {type: ObjectId, ref: 'User'},\n    reply: [{\n        from: {type: ObjectId, ref: 'User'},\n        to: {type: ObjectId, ref: 'User'},\n        content: String\n    }],\n    content: String,\n    meta: {\n        createAt: {\n            type: Date,\n            default: Date.now()\n        },\n        updateAt: {\n            type: Date,\n            default: Date.now()\n        }\n    }\n})\n\n// var ObjectId = mongoose.Schema.Types.ObjectId\nCommentSchema.pre('save', function(next) {\n    if (this.isNew) {\n        this.meta.createAt = this.meta.updateAt = Date.now()\n    }\n    else {\n        this.meta.updateAt = Date.now()\n    }\n\n    next()\n})\n\nCommentSchema.statics = {\n    fetch: function(cb) {\n        return this\n            .find({})\n            .sort('meta.updateAt')\n            .exec(cb)\n    },\n    findById: function(id, cb) {\n        return this\n            .findOne({_id: id})\n            .exec(cb)\n    }\n}\n\nmodule.exports = exports = CommentSchema\n"]}